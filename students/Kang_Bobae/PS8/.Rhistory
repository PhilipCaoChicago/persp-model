apply(2, mean),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as.numeric(as_tibble(biden_split$test)$biden)) %>%
apply(2, mean),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as.numeric(as_tibble(biden_split$test)$biden)) %>%
apply(2, mean))
data_frame(shrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as.numeric(as_tibble(biden_split$test)$biden)) %>%
apply(2, mean),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as.numeric(as_tibble(biden_split$test)$biden)) %>%
apply(2, mean),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as.numeric(as_tibble(biden_split$test)$biden)) %>%
apply(2, mean)) -> boost_test_err
boost_test_err
View(boost_test_err)
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), boosting_shrinkage.001:boosting_shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1")))
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1")))
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1"))) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
data_frame(shrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as_tibble(biden_split$test)$biden) %>%
apply(2, mean),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as_tibble(biden_split$test)$biden) %>%
apply(2, mean),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as_tibble(biden_split$test)$biden) %>%
apply(2, mean)) -> boost_test_err
data_frame(shrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as_tibble(biden_split$test)$biden) %>%
apply(2, mse),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as_tibble(biden_split$test)$biden) %>%
apply(2, mse),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.001, newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) round(x) == as_tibble(biden_split$test)$biden) %>%
apply(2, mse)) -> boost_test_err
boost_test_err
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1"))) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
data_frame(shrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) x != as_tibble(biden_split$test)$biden) %>%
apply(2, mean),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) x != as_tibble(biden_split$test)$biden) %>%
apply(2, mean),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) x != as_tibble(biden_split$test)$biden) %>%
apply(2, mean)) -> boost_test_err
boost_test_err
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1"))) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
biden_bag <- randomForest(biden ~ ., data = biden,
mtry = 5, ntree = 1000)
biden_bag
data_frame(var = rownames(importance(biden_bag)),
MeanDecreaseGini = importance(biden_bag)[,1]) %>%
mutate(var = fct_reorder(var, MeanDecreaseGini, fun = median)) %>%
ggplot(aes(var, MeanDecreaseGini)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
subtitle = "Bagging",
x = NULL,
y = "Average decrease in the Gini Index")
biden_rf <- randomForest(biden ~ ., data = biden,
ntree = 1000)
biden_rf
data_frame(var = rownames(importance(biden_rf)),
MeanDecreaseGini = importance(biden_rf)[,1]) %>%
mutate(var = fct_reorder(var, MeanDecreaseGini, fun = median)) %>%
ggplot(aes(var, MeanDecreaseGini)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
subtitle = "Bagging",
x = NULL,
y = "Average decrease in the Gini Index")
biden_bag <- randomForest(biden ~ ., data = biden_split$test,
mtry = 5, ntree = 1000)
biden_bag
data_frame(var = rownames(importance(biden_bag)),
MeanDecreaseGini = importance(biden_bag)[,1]) %>%
mutate(var = fct_reorder(var, MeanDecreaseGini, fun = median)) %>%
ggplot(aes(var, MeanDecreaseGini)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
subtitle = "Bagging",
x = NULL,
y = "Average decrease in the Gini Index")
biden_rf <- randomForest(biden ~ ., data = biden_split$test,
ntree = 1000)
biden_rf
data_frame(var = rownames(importance(biden_rf)),
MeanDecreaseGini = importance(biden_rf)[,1]) %>%
mutate(var = fct_reorder(var, MeanDecreaseGini, fun = median)) %>%
ggplot(aes(var, MeanDecreaseGini)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
subtitle = "Random forest",
x = NULL,
y = "Average decrease in the Gini Index")
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1")))
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1")))
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id)
names(biden_boosting_models)
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models))
)
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1")))
a <- boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: shrinkage = .001",
"Boosting: shrinkage = .01",
"Boosting: shrinkage = .1")))
a$model
a$model[1]
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models)))
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id)
boost_test_err %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
?apply()
predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000)
add_residuals()
?add_residuals
?residuals
residuals(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000)
gbm.roc.area(biden_boosting_models$boosting_shrinkage.001)
gbm.roc.area(gbm(biden ~ ., data = biden_split$train,
n.trees = 1000, shrinkage = 0.001))
?gbm_roc.area
?gbm.roc.area
hrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000)
rm(hrinkage.011)
rm(hrinkage.001)
predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000)
biden_boosting_models$boosting_shrinkage.001
as_tibble(biden_split$test)
as_tibble(biden_split$test) %>%
add_predictions(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test)
)
as_tibble(biden_split$test) %>%
add_predictions(biden_boosting_models$boosting_shrinkage.001)
as_tibble(biden_split$test) %>%
add_predictions(biden_boosting_models$boosting_shrinkage.001, n.trees=1000)
as_tibble(biden_split$test) %>%
add_predictions(biden_boosting_models$boosting_shrinkage.001, n.trees=1:1000)
mean((boost.pred - as_tibble(biden_split$test)$biden)^2)
boost.pred <- predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000)
mean((boost.pred - as_tibble(biden_split$test)$biden)^2)
predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
mutate(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean)
predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean)
data_frame(shrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:1000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean)) -> boost_test_mse
rm(boost_test_err)
boost_test_mse
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1)
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id)
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.1) %>%
gather(model, err, -id) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
biden_boosting_models <- list("boosting_shrinkage.001" = gbm(biden ~ ., data = biden_split$train,
n.trees = 5000, shrinkage = 0.001),
"boosting_shrinkage.01" = gbm(biden ~ ., data = biden_split$train,
n.trees = 5000, shrinkage = 0.01),
"boosting_shrinkage.1" = gbm(biden ~ ., data = biden_split$train,
n.trees = 5000, shrinkage = 0.1))
data_frame(shrinkage.001 = predict(biden_boosting_models$boosting_shrinkage.001,
newdata = as_tibble(biden_split$test), n.trees = 1:5000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean),
shrinkage.01 = predict(biden_boosting_models$boosting_shrinkage.01,
newdata = as_tibble(biden_split$test), n.trees = 1:5000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean),
shrinkage.1 = predict(biden_boosting_models$boosting_shrinkage.1,
newdata = as_tibble(biden_split$test), n.trees = 1:5000) %>%
apply(2, function(x) (x - as_tibble(biden_split$test)$biden)^2) %>%
apply(2, mean)) -> boost_test_mse
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = "Number of trees",
y = "Test error",
color = "Model")
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("Boosting: lambda = .001",
"Boosting: lambda = .01",
"Boosting: labmda = .1"))) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(title = 'Boosting MSE by shrinkage parameters',
subtitle = '',
x = "Number of trees",
y = "Test error",
color = "Model")
names(biden_boosting_models)
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("lambda = .001",
"lambda = .01",
"labmda = .1"))) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(title = 'Boosting MSE by shrinkage parameters',
subtitle = '',
x = "Number of trees",
y = "Test error",
color = "Model")
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
mutate(model = factor(model, levels = names(biden_boosting_models),
labels = c("lambda = .001",
"lambda = .01",
"labmda = .1"))) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(title = 'Boosting MSE by shrinkage parameters',
subtitle = '',
x = "Number of trees",
y = "Test error")
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(title = 'Boosting MSE by shrinkage parameters',
subtitle = '',
x = "Number of trees",
y = "Test error",
color = 'Model')
boost_test_mse %>%
mutate(id = row_number()) %>%
mutate_each(funs(cummean(.)), shrinkage.001:shrinkage.01) %>%
gather(model, err, -id) %>%
ggplot(aes(id, err, color = model)) +
geom_line() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(title = 'Boosting MSE by shrinkage parameters',
x = "Number of trees",
y = "Test error",
color = 'Model')
data_frame(var = rownames(importance(biden_rf)),
MeanDecreaseGini = importance(biden_rf)[,1]) %>%
mutate(var = fct_reorder(var, MeanDecreaseGini, fun = median)) %>%
ggplot(aes(var, MeanDecreaseGini)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
subtitle = "Random forest",
x = NULL,
y = "Average decrease in the Gini Index")
data_frame(var = rownames(importance(biden_bag)),
MeanDecreaseGini = importance(biden_bag)[,1]) %>%
mutate(var = fct_reorder(var, MeanDecreaseGini, fun = median)) %>%
ggplot(aes(var, MeanDecreaseGini)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
subtitle = "Bagging",
x = NULL,
y = "Average decrease in the Gini Index")
data_frame(var = rownames(importance(biden_rf)),
`Random forest` = importance(biden_rf)[,1]) %>%
left_join(data_frame(var = rownames(importance(biden_rf)),
Bagging = importance(biden_bag)[,1])) %>%
mutate(var = fct_reorder(var, Bagging, fun = median)) %>%
gather(model, gini, -var) %>%
ggplot(aes(var, gini, color = model)) +
geom_point() +
coord_flip() +
labs(title = "Predicting survival on the Titanic",
x = NULL,
y = "Average decrease in the Gini Index",
color = "Method")
data_frame(var = rownames(importance(biden_rf)),
`Random forest` = importance(biden_rf)[,1]) %>%
left_join(data_frame(var = rownames(importance(biden_rf)),
Bagging = importance(biden_bag)[,1])) %>%
mutate(var = fct_reorder(var, Bagging, fun = median)) %>%
gather(model, gini, -var) %>%
ggplot(aes(var, gini, color = model)) +
geom_point() +
coord_flip() +
labs(title = "Predicting Biden feeling thermometer",
x = NULL,
y = "Average decrease in the Gini Index",
color = "Method")
set.seed(0)
biden_split <- resample_partition(biden, c(test = 0.3, train = 0.7))
mhealth_split <- resample_partition(mhealth, c(test = 0.3, train = 0.7))
biden_tree1
biden_tree2
ggplot(segment(tree_data)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
alpha = 0.5) +
geom_text(data = label(tree_data),
aes(x = x, y = y, label=label), vjust = -0.5, size = 3) +
geom_text(data = leaf_label(tree_data),
aes(x = x, y = y, label=label), vjust = 0.5, size = 3) +
theme_dendro() +
labs(title = "Biden feeling thermometer tree",
subtitle = "All predictors")
biden_cv %>%
select(k, mse) %>%
group_by(k) %>%
summarize(test_mse = mean(mse),
sd = sd(mse, na.rm = TRUE)) %>%
ggplot(aes(k, test_mse)) +
geom_point() +
geom_line() +
labs(x = "Number of terminal nodes",
y = "Test MSE")
mhealth
mhealth_tree <- tree(vote98 ~ .,
data = mhealth_split$train)
mhealth_tree <- tree(vote96 ~ .,
data = mhealth_split$train)
mhealth_tree
colnames(mhealth_tree)
colnames(mhealth)
mhealth
mhealth %>% mutate(vote96 = factor(vote96, levels = 0:1, labels = c("No", "Yes")),
black = factor(black, levels = 0:1, labels = c("not_black", "black")),
female = factor(female, levels = 0:1, labels = c('male', 'female')),
married = factor(married, levels = 0:1, labels = c('unmarried', 'married')))
mhealth <- mhealth %>%
mutate(vote96 = factor(vote96, levels = 0:1, labels = c("No", "Yes")),
black = factor(black, levels = 0:1, labels = c("not_black", "black")),
female = factor(female, levels = 0:1, labels = c('male', 'female')),
married = factor(married, levels = 0:1, labels = c('unmarried', 'married')))
mhealth_split
mhealth_split <- resample_partition(mhealth, c(test = 0.3, train = 0.7))
mhealth_tree <- tree(vote96 ~ .,
data = mhealth_split$train)
mhealth_tree
tree_data <- dendro_data(mhealth_tree)
ggplot(segment(tree_data)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend),
alpha = 0.5) +
geom_text(data = label(tree_data),
aes(x = x, y = y, label=label), vjust = -0.5, size = 3) +
geom_text(data = leaf_label(tree_data),
aes(x = x, y = y, label=label), vjust = 0.5, size = 3) +
theme_dendro() +
labs(title = "Voter turnout tree",
subtitle = "All predictors")
