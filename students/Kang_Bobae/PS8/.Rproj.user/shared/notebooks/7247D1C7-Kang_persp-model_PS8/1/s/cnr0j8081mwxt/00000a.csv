"0","# pruned tree"
"0","err_rate_tree <- err.rate.tree(mhealth_tree_pruned, mhealth_test)"
"0","# bagging"
"0","pred_bag <- predict(mhealth_bag, newdata = mhealth_test, type = 'response', n.trees=5000) %>% as.character()"
"0","actual1 <- as.character(mhealth_test$vote96)"
"0","err_rate_bag <- mean(pred_bag != actual1, na.rm = TRUE)"
"0","# random forest"
"0","pred_rf <- predict(mhealth_rf, newdata = mhealth_test, type = 'response', n.trees=5000) %>% as.character()"
"0","err_rate_rf <- mean(pred_rf != actual1, na.rm = TRUE)"
"0","# boosting, shrinkage = 0.001"
"0","actual2 <- as.character(mhealth_test2$vote96)"
"0","pred_bst.001 <- predict(mhealth_bst.001, newdata = mhealth_test2, type = 'response', n.trees=5000) %>% round() %>% as.character()"
"0","err_rate_bst.001 <- mean(pred_bst.001 != actual2, na.rm = TRUE)"
"0","# boosting, shrinkage = 0.01"
"0","pred_bst.1 <- predict(mhealth_bst.1, newdata = mhealth_test2, type = 'response', n.trees=5000) %>% round() %>% as.character()"
"0","err_rate_bst.1 <- mean(pred_bst.1 != actual2, na.rm = TRUE)"
"0","Tree_model = c('Pruned tree', 'Bagging', 'Random Forest', 'Boosting, 0.001', 'Boosing, 0.1')"
"0","Test_error_rate = c(err_rate_tree, err_rate_bag, err_rate_rf, err_rate_bst.001, err_rate_bst.1)"
"0","data.frame(Tree_model, Test_error_rate)"
