"0","knitr::opts_chunk$set(echo=FALSE, warning = FALSE, message=FALSE, cache=TRUE)"
"0","# import packages"
"0","library(tidyverse)"
"0","library(data.table)"
"0","library(modelr)"
"0","library(broom)"
"0","library(tree)"
"0","library(randomForest)"
"0","library(ggdendro) #devtools::install_github(""bensoltoff/ggdendro"")"
"0","library(forcats)"
"0","library(gbm)"
"0","library(pROC)"
"0","library(e1071)"
"0","library(rmarkdown)"
"0","library(knitr)"
"0","# import data"
"0","biden <- fread('data/biden.csv')"
"0","mhealth <- fread('data/mental_health.csv')"
"0","simpson <- fread('data/simpson.csv')"
"0","# set seed for reproducibility"
"0","set.seed(0)"
"0","# define a function to get mse"
"0","mse <- function(model, data) {"
"0","  x <- modelr:::residuals(model, data)"
"0","  mean(x ^ 2, na.rm = TRUE)"
"0","}"
"0","err.rate.tree <- function(model, data) {"
"0","  data <- as_tibble(data)"
"0","  response <- as.character(model$terms[[2]])"
"0","  "
"0","  pred <- predict(model, newdata = data, type = ""class"")"
"0","  actual <- data[[response]]"
"0","  "
"0","  return(mean(pred != actual, na.rm = TRUE))"
"0","}"
